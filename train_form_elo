from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
import numpy as np

# Sample match data: [Team A Elo, Team B Elo, Team A Form, Team B Form, Outcome (1=win A, 0=draw, -1=win B)]
data = np.array([
    [1600, 1550, 10, -5, 1],
    [1450, 1650, -10, 20, -1],
    [1500, 1500, 0, 0, 0],
    # Add more matches...
])

# Split into features (X) and labels (y)
X = data[:, :-1]  # Elo ratings and recent form
y = data[:, -1]   # Match outcomes

# Split data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Train a logistic regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# Test the model
accuracy = model.score(X_test, y_test)
print(f"Model accuracy: {accuracy:.2f}")

# Now use the trained model to predict the outcome of new matches
new_match = np.array([[1700, 1600, 15, -10]])  # Example new match (Team A Elo, Team B Elo, Team A Form, Team B Form)
prediction = model.predict(new_match)
print(f"Predicted outcome: {prediction}")
